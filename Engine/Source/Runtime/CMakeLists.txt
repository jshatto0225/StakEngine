file(GLOB SOURCES Core/*.cpp Platform/*.cpp Renderer/*.cpp AssetLoading/*.cpp)

set(CMAKE_CXX_STANDARD_REQUIRED 20)

if(CMAKE_HOST_WIN32)
  set(SK_WINDOWS 1 GLOBAL)
  set(SK_LINUX 0 GLOBAL)
  set(SK_VULKAN 0 GLOBAL)
  set(SK_OPENGL 1 GLOBAL)
endif()

if(CMAKE_HOST_UNIX AND NOT CMAKE_HOST_APPLE)
  set(SK_WINDOWS 0 GLOBAL)
  set(SK_LINUX 1 GLOBAL)
  set(SK_OPENGL 1 GLOBAL)
  set(SK_VULKAN 0 GLOBAL)
  find_package(X11)
  find_package(Wayland)
endif()

add_library(StakRuntime STATIC ${SOURCES} ${WINDOW_PLATFORM} ${RENDERER_PLATFORM})

if(SK_WINDOWS EQUAL 1)
  target_compile_definitions(StakRuntime PUBLIC SK_WINDOWS=1)
  target_compile_definitions(StakRuntime PUBLIC SK_WGL=1)
  target_link_libraries(StakRuntime PRIVATE user32.lib)
endif()

if(SK_LINUX EQUAL 1)
  target_compile_definitions(StakRuntime PUBLIC SK_LINUX=1)
  if(X11_FOUND)
    target_compile_definitions(StakRuntime PUBLIC SK_X11=1)
    target_link_libraries(StakRuntime PUBLIC X11)
  elseif(Wayland_FOUND)
    target_compile_definitions(StakRuntime PUBLIC SK_WAYLAND=1)
  endif()
endif()

#if(SK_VULKAN EQUAL 1)
#  target_compile_definitions(StakRuntime PRIVATE SK_VULKAN=1)
#  find_package(Vulkan)
#  target_link_libraries(StakRuntime PRIVATE ${Vulkan_LIBRARY})
#  target_include_directories(StakRuntime PRIVATE ${Vulkan_INCLUDE_DIR})
#  target_include_directories(StakRuntime PRIVATE Platform/Vulkan)
#endif()

if(SK_OPENGL EQUAL 1)
  target_compile_definitions(StakRuntime PUBLIC SK_OPENGL=1)
  find_package(OpenGL REQUIRED)
  target_link_libraries(StakRuntime PRIVATE ${OPENGL_LIBRARIES})
  target_include_directories(StakRuntime PUBLIC ${OPENGL_INCLUDE_DIR})
endif()

target_include_directories(StakRuntime PUBLIC Core)
target_include_directories(StakRuntime PUBLIC Renderer)
target_include_directories(StakRuntime PUBLIC Math/Vector)
target_include_directories(StakRuntime PUBLIC Math/Matrix)
target_include_directories(StakRuntime PUBLIC Math)
target_include_directories(StakRuntime PUBLIC Platform)
target_include_directories(StakRuntime PUBLIC AssetLoading)

target_compile_definitions(StakRuntime PUBLIC $<$<CONFIG:Debug>: SK_DEBUG=1>)
target_compile_definitions(StakRuntime PUBLIC $<$<CONFIG:Release>: SK_RELEASE=1>)
target_compile_definitions(StakRuntime PUBLIC "SOURCE_DIR=\"${CMAKE_SOURCE_DIR}/\"")
target_compile_definitions(StakRuntime PUBLIC "ASSET_DIR=\"${CMAKE_SOURCE_DIR}/Engine/Assets/\"")
target_compile_definitions(StakRuntime PUBLIC "SHADER_DIR=\"${CMAKE_SOURCE_DIR}/Engine/Assets/Shaders/\"")
